// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

enum Role {
  USER
  ADMIN
  MANUFACTURER
}

model User {
  id                  Int                  @id @default(autoincrement())
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  name                String?
  email               String               @unique
  hashedPassword      String?
  role                Role
  sessions            Session[]
  Design              Design[]
  passwordResetTokens PasswordResetToken[]
  Cart                Cart[]
  assignedOrders      Order[]
}

model PasswordResetToken {
  token     String   @id
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model Cart {
  id        String    @id @default(cuid())
  orderedAt DateTime?

  items  CartItem[]
  orders Order[]

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model CartItem {
  quantity Int    @default(1)
  design   Design @relation(fields: [designId], references: [id])
  designId Int
  Cart     Cart   @relation(fields: [cartId], references: [id])
  cartId   String

  @@id([cartId, designId])
}

enum OrderStatus {
  CREATED
  PAID
  MANUFACTURERING
  SHIPPED
}

model Order {
  id              String      @id @default(cuid())
  createdAt       DateTime    @default(now())
  paymentIntentId String?     @unique
  receiptUrl      String?
  status          OrderStatus @default(CREATED)

  assignedTo   User? @relation(fields: [assignedToId], references: [id])
  assignedToId Int?

  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?

  cart   Cart   @relation(fields: [cartId], references: [id])
  cartId String
}

model Address {
  id         String  @id @default(cuid())
  city       String
  country    String
  line1      String
  line2      String?
  postalCode String
  state      String
  name       String

  orders Order[]
}

model Design {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String
  isPublic    Boolean
  isApproved  Boolean  @default(false)
  price       Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int

  pictures  Picture[]
  files     File[]
  cartItems CartItem[]
}

model File {
  id        String   @id @default(cuid())
  type      String
  updatedAt DateTime @updatedAt

  design   Design? @relation(fields: [designId], references: [id])
  designId Int?
}

model Picture {
  id    String @id @default(cuid())
  order Int

  design   Design? @relation(fields: [designId], references: [id])
  designId Int?
}
