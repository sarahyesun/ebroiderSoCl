// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

enum Role {
  USER
  ADMIN
  MANUFACTURER
}

model User {
  id                  Int                  @id @default(autoincrement())
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  name                String?
  email               String               @unique
  hashedPassword      String?
  role                Role
  sessions            Session[]
  Design              Design[]
  passwordResetTokens PasswordResetToken[]
}

model PasswordResetToken {
  token     String   @id
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model Design {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String
  isPublic    Boolean
  isApproved  Boolean  @default(false)
  price       Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int

  pictures Picture[]
  files    File[]
}

model File {
  id        String   @id @default(cuid())
  type      String
  updatedAt DateTime @updatedAt

  design   Design? @relation(fields: [designId], references: [id])
  designId Int?
}

model Picture {
  id    String @id @default(cuid())
  order Int

  design   Design? @relation(fields: [designId], references: [id])
  designId Int?
}
